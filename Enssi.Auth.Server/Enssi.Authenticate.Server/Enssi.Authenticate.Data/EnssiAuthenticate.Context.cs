//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Enssi.Authenticate.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EnssiAuthenticateEntities : DbContext
    {
        public EnssiAuthenticateEntities()
            : base("name=EnssiAuthenticateEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Application> Application { get; set; }
        public virtual DbSet<ApproveLog> ApproveLog { get; set; }
        public virtual DbSet<ApproveTemplate> ApproveTemplate { get; set; }
        public virtual DbSet<ApproveTemplateDetail> ApproveTemplateDetail { get; set; }
        public virtual DbSet<CommonWords> CommonWords { get; set; }
        public virtual DbSet<InterfaceDetail> InterfaceDetail { get; set; }
        public virtual DbSet<InterfaceDetailHist> InterfaceDetailHist { get; set; }
        public virtual DbSet<InterfaceMain> InterfaceMain { get; set; }
        public virtual DbSet<InterfaceMainHist> InterfaceMainHist { get; set; }
        public virtual DbSet<Organization> Organization { get; set; }
        public virtual DbSet<OrganizationGeneral> OrganizationGeneral { get; set; }
        public virtual DbSet<PermissionBtn> PermissionBtn { get; set; }
        public virtual DbSet<PermissionBtnInterface> PermissionBtnInterface { get; set; }
        public virtual DbSet<PermissionBtnRole> PermissionBtnRole { get; set; }
        public virtual DbSet<PermissionGroup> PermissionGroup { get; set; }
        public virtual DbSet<PermissionInterface> PermissionInterface { get; set; }
        public virtual DbSet<PermissionInterfaceRole> PermissionInterfaceRole { get; set; }
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<UserToken> UserToken { get; set; }
        public virtual DbSet<UserToRole> UserToRole { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<V_PermissionBtnQuery> V_PermissionBtnQuery { get; set; }
        public virtual DbSet<V_PermissionBtnRoleQuery> V_PermissionBtnRoleQuery { get; set; }
        public virtual DbSet<V_PermissionInterfaceQuery> V_PermissionInterfaceQuery { get; set; }
        public virtual DbSet<V_UserPermissionQuery> V_UserPermissionQuery { get; set; }
        public virtual DbSet<V_UserToRoleQuery> V_UserToRoleQuery { get; set; }
        public virtual DbSet<User> User { get; set; }
    
        public virtual ObjectResult<sp_OrganizationQuery_Result> sp_OrganizationQuery(string name, string type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrganizationQuery_Result>("sp_OrganizationQuery", nameParameter, typeParameter);
        }
    
        public virtual ObjectResult<sp_PermissionGroupQuery_Result> sp_PermissionGroupQuery(string name, string appname)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var appnameParameter = appname != null ?
                new ObjectParameter("appname", appname) :
                new ObjectParameter("appname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_PermissionGroupQuery_Result>("sp_PermissionGroupQuery", nameParameter, appnameParameter);
        }
    }
}
